{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2017/04/28/using-systemd-squash-thp-start-splunk-enterprise/",
    "result": {"data":{"site":{"siteMetadata":{"title":"RFaircloth Data Nerd"}},"markdownRemark":{"id":"cc90d973-01a0-5bd0-9c3f-9fcbad98aa89","excerpt":"Updated Jan, 16, 2018 user security issue Updated Jan 19,2018 using forking type for splunk Updated Oct 2019 for format issues after wordpress upgrade Fixing…","html":"<p>Updated Jan, 16, 2018 user security issue</p>\n<p>Updated Jan 19,2018 using forking type for splunk</p>\n<p>Updated Oct 2019 for format issues after wordpress upgrade</p>\n<h2>Fixing INIT Scripts</h2>\n<p>If you are currently or prefer using init script startup to remain as close to “out of box” configuration as possible be aware of a serious security risk present in the traditional startup method. REF: <a href=\"https://www.splunk.com/view/SP-CAAAP3M\">https://www.splunk.com/view/SP-CAAAP3M </a>To mitigate the issue and address THP/Ulimits consider moving to a field modified version of the script. <a href=\"https://bitbucket.org/snippets/rfaircloth-splunk/Gek8My\">https://bitbucket.org/snippets/rfaircloth-splunk/Gek8My</a></p>\n<h3>Going forward using SYSTEMD</h3>\n<p>The concept presented in this post, as well as the original inspiration, have some risks. Using alternatives to the vendor provided init scripts have support risks including loss of the configuration by future upgrades. Each operating system vendor has their own specific guidance on how to do this, each automation vendor has example automation scripts as well. Picking an approach that is appropriate for your environment is up to you.</p>\n<p>THP the bain of performance for so many things in big data is often left on by default and is slightly difficult to disable. As a popular Splunk answers post and Splunk consultants include Marquis have found the best way to ensure ulimit and THP settings are properly configured is to modify the init scripts. This is a really crafty and reliable way to ensure THP is disabled for Splunk, it works on all Linux operating systems regardless of how services are started.</p>\n<p>I’m doing some work with newer operating systems and wanted to explore how systemd really works and changes what is possible in managing a server. Lets face it systemd has not gotten the best of receptions in the community, after all it moved our cheese, toys and the ball all at once. It seems to be here to stay what if we could use its powers for good in relation to Splunk. Let’s put an end to THP and start Splunk the systemd native way.</p>\n<p>Note: the following config file is present for readability and google. Downloadable text file is available <a href=\"https://bitbucket.org/snippets/rfaircloth-splunk/ze7rqL\">https://bitbucket.org/snippets/rfaircloth-splunk/ze7rqL</a></p>\n<p>Create the file <code class=\"language-text\">/etc/systemd/system/disable-transparent-huge-pages.service</code><br>\n“</p>\n<p><code class=\"language-text\">&lt;br>&lt;/br>[Unit]&lt;br>&lt;/br>Description=Disable Transparent Huge Pages</code></p>\n<p>[Service]<br>\nType=oneshot<br>\nExecStart=/bin/sh -c “echo never >/sys/kernel/mm/transparent_hugepage/enabled”<br>\nExecStart=/bin/sh -c “echo never >/sys/kernel/mm/transparent_hugepage/defrag”<br>\nRemainAfterExit=true<br>\n[Install]<br>\nWantedBy=multi-user.target</p>\n<p>Verify THP and defrag is presently enabled to avoid a false sense of success</p>\n<p><code class=\"language-text\"># cat /sys/kernel/mm/transparent_hugepage/enabled</code></p>\n<p>[always] madvise never</p>\n<p><code class=\"language-text\"># cat /sys/kernel/mm/transparent_hugepage/defrag</code></p>\n<blockquote>\n<p>[always] madvise never</p>\n</blockquote>\n<p>Enable and start the unit to disable THP</p>\n<p><code class=\"language-text\"># systemctl enable disable-transparent-huge-pages.service</code></p>\n<p><code class=\"language-text\"># systemctl start disable-transparent-huge-pages.service</code></p>\n<p><code class=\"language-text\"># cat /sys/kernel/mm/transparent_hugepage/enabled</code></p>\n<blockquote>\n<p>always madvise [never]</p>\n</blockquote>\n<p><code class=\"language-text\"># cat /sys/kernel/mm/transparent_hugepage/defrag</code></p>\n<blockquote>\n<p>always madvise [never]</p>\n</blockquote>\n<p>Reboot and repeat the verification to ensure the process is enforced</p>\n<p>Note: the following config file is present for readability and google. Downloadable text file is available <a href=\"https://bitbucket.org/snippets/rfaircloth-splunk/xe7rqj\">https://bitbucket.org/snippets/rfaircloth-splunk/xe7rqj</a></p>\n<p>create the unit file <code class=\"language-text\">/etc/systemd/system/splunk.service</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#2018-01-19 Switched to forking indexers with no web port exit differentl than search heads\n[Unit]\nAfter=network.target\nWants=network.target\nDescription=Splunk Enterprise\n\n\n[Service]\nType=forking\nRemainAfterExit=False\nUser=splunk\nGroup=splunk\n\nExecStart=/opt/splunk/bin/splunk start --answer-yes --no-prompt --accept-license\nExecStop=/opt/splunk/bin/splunk stop\nPIDFile=/opt/splunk/var/run/splunk/splunkd.pid\n\nRestart=on-failure\nTimeoutSec=300\n\n#ulimit -Sn 65535\n#ulimit -Hn 65535\nLimitNOFILE=65535\n#ulimit -Su 20480\n#ulimit -Hu 20480\nLimitNPROC=20480\n#ulimit -Hf unlimited\n#ulimit -Sf unlimited\nLimitFSIZE=infinity\nLimitCORE=infinity\n[Install]\nWantedBy=multi-user.target</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n<p><code class=\"language-text\"># systemctl enable splunk.service</code></p>\n<p><code class=\"language-text\"># systemctl start splunk.service</code></p>\n<p>Verify the ulimits have been applied via splunk logs</p>\n<p><code class=\"language-text\">#cat /opt/splunk/var/log/splunk/splunkd.log | grep ulimit</code></p>\n<p>Reboot and repeate all verifications</p>\n<p>Bonus material, kill Splunk (lab env only) and watch systemd bring it back</p>\n<p><code class=\"language-text\"># killall splunk</code></p>\n<p><code class=\"language-text\"># ps aux | grep splunk</code></p>\n<p>You just noticed splunkd was brought back to up when it died without using systemctl stop. This means using splunk start|stop is not valid when systemd started Splunk.</p>","frontmatter":{"title":"Using systemd to squash THP and start splunk enterprise","date":"April 28, 2017","description":null}},"previous":{"fields":{"slug":"/2017/03/14/splunk-os-data-boarding-best-practices-updated/"},"frontmatter":{"title":"Splunk OS Data on boarding best practices updated"}},"next":{"fields":{"slug":"/2017/05/15/data-streams-fill-data-river-events-splunk/"},"frontmatter":{"title":"Data Streams Fill the data river with events from Splunk"}}},"pageContext":{"id":"cc90d973-01a0-5bd0-9c3f-9fcbad98aa89","previousPostId":"84a74185-5407-50fb-bd5d-87385405c3e2","nextPostId":"e6f3b3c0-07d4-5bdb-99f5-e0b5091b74c1"}},
    "staticQueryHashes": ["2841359383","3257411868"]}